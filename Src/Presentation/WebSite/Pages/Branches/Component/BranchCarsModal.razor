@    using Application.Aggregates.BranchAggregate.Commands.Create
@    using Application.Aggregates.BranchAggregate.Queries
@    using Domain.Common

<div class="modal-backdrop fade show"></div>

<div class="modal show" tabindex="-1" role="dialog" style="display:block">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title">Final Mile Details</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="ModalCancel">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <EditForm Model="createBranchCarsRequest" OnValidSubmit="ModalOk">

                <DataAnnotationsValidator />

                <div class="modal-body">

                    <div class="card-body">

                        <div class="form-group">
                            <label for="inputClient" class="col-md-3 col-sm-6 col-form-label-sm">Cars</label>
                            <div class="col-md-10 col-sm-10">
                                @if (createBranchCarsRequest.Cars != null)
                                {
                                    @foreach (ChosenItem myitem in createBranchCarsRequest.Cars)
                                    {
                                        <label>
                                            <InputCheckbox @bind-Value="myitem.IsChosen" />
                                            @myitem.ChosenName
                                        </label>
                                        <br />
                                    }
                                }
                            </div>
                        </div>

                    </div>

                </div>


                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-danger" data-dismiss="modal" @onclick="() => ModalCancel()">Close</button>
                    <button type="submit" class="btn btn-sm btn-primary">Save</button>
                </div>
            </EditForm>

        </div>

    </div>
</div>


@code {

    [Parameter]
    public CreateBranchCarsRequest createBranchCarsRequest { get; set; }

    [Parameter]
    public EventCallback<CreateBranchCarsRequest> OnClose { get; set; }


    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(null);
    }

    private Task ModalOk()
    {
        return OnClose.InvokeAsync(createBranchCarsRequest);
    }


    //public void ClientFeatureUpdate(bool IsActive)
    //{

    //    createBranchCarsRequest.IsActive = IsActive;

    //}



}


